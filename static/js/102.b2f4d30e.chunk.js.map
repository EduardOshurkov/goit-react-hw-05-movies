{"version":3,"file":"static/js/102.b2f4d30e.chunk.js","mappings":"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","sources":["components/API/apiServices.js","components/FilmSearch/FilmSearch.jsx","pages/MoviesPages/Movies.styled.jsx","pages/MoviesPages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '152aa9c1fb200c1c42a40b69b3af0ad5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const getMovies = async () => {\n    const {data} = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return data;\n}\n\n\nexport const getFilmInfo = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getFilmCast = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return data;\n};\n\nexport const getFilmReviews = async (id) => {\n    const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getSearchFilm = async (query) => {\n    const data = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data;\n}\n\n\n\n\n","\nimport { useState } from \"react\";\n\n\nconst FilmSearch = ({onSubmit}) => {\n    const [state, setState] = useState({\n        search: ''\n    });\n\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit({ ...state });\n        setState({\n            search: ''\n        })\n    };\n\n    return (\n         <form onSubmit={handleSubmit}>\n            <input name=\"search\" value={state.search} onChange={handleChange} placeholder=\"Search Film\" required/>\n            <button type=\"submit\">Search</button>\n            <ul></ul>\n       </form>\n    )\n}\n\n\nexport default FilmSearch;\n","import styled from \"@emotion/styled\";\n\n\n\nexport const FilmCard = styled.ul`\nmin-width: 280px;\n    flex-wrap: wrap;\n    display: flex;\n    list-style: none;\n    padding: 0;\n`\n\n\nexport const FilmList = styled.li`\nmax-width:300px;\nmargin-right:10px\n`","import { useEffect, useState } from \"react\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { getSearchFilm } from \"components/API/apiServices\";\nimport DefaultImage from '../../../src/no-picture-available-icon-20.jpeg';\nimport { Link } from \"react-router-dom\";\nimport FilmSearch from \"components/FilmSearch/FilmSearch\";\nimport { FilmCard, FilmList } from \"./Movies.styled\";\n\n\n\nconst Movies = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const location = useLocation();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search');\n\n    useEffect(() => {\n        const FetchFilm = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                }));\n                const { data } = await getSearchFilm(search)\n                setState(prevState => ({\n                    ...prevState,\n                    items: data.results,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n\n                }))\n            }\n            finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }))\n            }\n        }\n        if (search) {\n            FetchFilm();\n        }\n\n    }, [search]);\n\n    const changeSearch = ({ search }) => {\n        setSearchParams({ search })\n    }\n\n\n    const { items, loading, error } = state;\n    const elements = items.map(({ id, original_title, poster_path, name }) => <div key={id}>\n        <Link state={{from: location}} to={`/movies/${id}`} key={id}>\n            <FilmList>\n                {poster_path ? (<img src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt=\"\" />)\n                    : (<img src={DefaultImage} alt=\"\" width='90' height='135' />)}\n                <h2>{original_title || name}</h2>\n            </FilmList>\n        </Link>\n    </div>)\n\n    return (\n        <div>\n            {loading && <p>...Loading</p>}\n            {error && <p>Error</p>}\n            <FilmSearch onSubmit={changeSearch} />\n            <FilmCard>{items.length > 0 && elements}</FilmCard>\n        </div>)\n    \n};\n\n\nexport default Movies;"],"names":["API_KEY","axios","getMovies","data","getFilmInfo","id","getFilmCast","getFilmReviews","getSearchFilm","query","onSubmit","useState","search","state","setState","event","preventDefault","name","value","onChange","target","placeholder","required","type","FilmCard","styled","FilmList","items","loading","error","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","FetchFilm","prevState","results","elements","map","original_title","poster_path","from","to","src","alt","DefaultImage","width","height","length"],"sourceRoot":""}
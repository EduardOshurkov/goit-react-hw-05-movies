{"version":3,"file":"static/js/809.acaf9e39.chunk.js","mappings":"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","sources":["components/API/apiServices.js","components/Loader/Loader.jsx","pages/CastPages/FilmCastInfo.styled.jsx","pages/CastPages/FilmCastInfo.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '152aa9c1fb200c1c42a40b69b3af0ad5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const getMovies = async () => {\n    const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return data;\n}\n\n\nexport const getFilmInfo = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getFilmCast = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return data;\n};\n\nexport const getFilmReviews = async (id) => {\n    const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getSearchFilm = async (query) => {\n    const data = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data;\n}\n\n\n\n\n","import { BallTriangle } from 'react-loader-spinner';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\n\n\nexport default function Loader() {\n    return (\n        <LoaderWraper>\n            <BallTriangle color=\"#00BFFF\" height={80} width={80} />\n        </LoaderWraper>\n    )\n}\n\n\nconst LoaderWraper = styled.div`\n display: flex;\n  justify-content: center;\n`","import styled from '@emotion/styled';\n\n\n\n\nexport const CastList = styled.ul`\ndisplay:flex;\nflex-wrap: wrap;\n`\n\nexport const CastBlock = styled.div`\nmax-width:100px;\n`\n\nexport const CastCard = styled.li`\nlist-style:none;\nmargin-right: 10px;\n`\n\nexport const CastPhoto = styled.img`\n  width: 100%;\n  height: 135px;\n  object-fit: cover;\n`;","import { useEffect, useState } from \"react\";\nimport { getFilmCast } from \"components/API/apiServices\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\nimport { CastList, CastBlock, CastCard, CastPhoto } from \"./FilmCastInfo.styled\";\nimport DefaultImage from '../../image/no photo.jpeg';\n\n\nconst FilmCastInfo = () => {\n    const [state, setState] = useState({\n        cast: [],\n        loading: false,\n        error: null,\n        isEmpty: false, \n    });\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const getCast = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    isEmpty: true,\n                    error: null,\n                }));\n                \n                const { cast } = await getFilmCast(id);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        cast: [...prevState.cast, ...cast],\n                        loading: false,\n                        error: null,\n                        isEmpty:false,\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            };\n        };\n        getCast();\n    }, [id]);\n\n    const { cast, loading, error, isEmpty } = state;\n    const elementsCast = cast.map(({ id, name, character, profile_path}) => <CastBlock key={id}>\n        <CastCard>\n            {profile_path ? (<CastPhoto src={`https://image.tmdb.org/t/p/w300/${profile_path}`} alt=\"\" />)\n                : (<CastPhoto src={DefaultImage} alt=\"\" width='90' height='135' />)}\n            <p>{name}</p>\n            <p>{character}</p>\n        </CastCard>\n    </CastBlock>)\n\n    return (\n        <div>\n            {isEmpty && <h1>Sorry no information</h1>}\n             {loading && <Loader/>}\n            {error && <p>Error</p>}\n            <CastList>{elementsCast}</CastList>\n        </div>\n    );\n};\n\nexport default FilmCastInfo;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["API_KEY","axios","getMovies","data","getFilmInfo","id","getFilmCast","getFilmReviews","getSearchFilm","query","Loader","LoaderWraper","color","height","width","styled","CastList","CastBlock","CastCard","CastPhoto","useState","cast","loading","error","isEmpty","state","setState","useParams","useEffect","getCast","prevState","elementsCast","map","name","character","profile_path","src","alt","DefaultImage","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}
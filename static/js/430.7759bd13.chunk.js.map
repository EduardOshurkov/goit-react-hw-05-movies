{"version":3,"file":"static/js/430.7759bd13.chunk.js","mappings":"4TAGMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAGlB,IAAMC,EAAS,mCAAG,sGACAD,IAAAA,IAAA,sCAAyCD,IADzC,uBACdG,EADc,EACdA,KADc,kBAEdA,GAFc,2CAAH,qDAMTC,EAAW,mCAAG,WAAOC,GAAP,yFACFJ,IAAAA,IAAA,iBAAoBI,EAApB,oBAAkCL,EAAlC,oBADE,uBAChBG,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKXG,EAAW,mCAAG,WAAOD,GAAP,yFACAJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA0CL,EAA1C,oBADA,uBACfG,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKXI,EAAc,mCAAG,WAAOF,GAAP,uFACPJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA0CL,EAA1C,oBADO,cACpBG,EADoB,yBAEnBA,GAFmB,2CAAH,sDAKdK,EAAa,mCAAG,WAAOC,GAAP,uFACNR,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,+CADM,cACnBN,EADmB,yBAElBA,GAFkB,2CAAH,qD,gNCzBbO,EAAOC,EAAAA,EAAAA,KAAH,6FAMJC,EAAQD,EAAAA,EAAAA,MAAH,qeAgBLE,EAASF,EAAAA,EAAAA,OAAH,qf,SCUnB,EA/BmB,SAAC,GAAgB,IAAfG,EAAc,EAAdA,SACjB,GAA0BC,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,KADZ,eAAOC,EAAP,KAAcC,EAAd,KAoBA,OACI,UAACR,EAAD,CAAMI,SATW,SAACK,GAClBA,EAAMC,iBACNN,GAAS,UAAKG,IACdC,EAAS,CACLF,OAAQ,IAEf,EAGG,WACI,SAACJ,EAAD,CAAOS,KAAK,SAASC,MAAOL,EAAMD,OAAQO,SAjB7B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZH,EAAgBG,EAAhBH,KAAMC,EAAUE,EAAVF,MACdJ,GAAS,kBACFD,GADC,cAEHI,EAAOC,IAEf,EAWyEG,YAAY,cAAcC,UAAQ,KAChG,SAACb,EAAD,CAAQc,KAAK,SAAb,sBAIf,EC5BYC,EAAWjB,EAAAA,EAAAA,GAAH,oMAURkB,EAAWlB,EAAAA,EAAAA,GAAH,6D,UCsErB,EA1Ee,WACX,OAA0BI,EAAAA,EAAAA,UAAS,CAC/Be,MAAO,GACPC,SAAS,EACTC,MAAO,KACPC,SAAS,IAJb,eAAOhB,EAAP,KAAcC,EAAd,KAOMgB,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAASqB,EAAaE,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,sGAEVvB,GAAS,SAAAwB,GAAS,yBACXA,GADW,IAEdX,SAAS,EACTE,SAAS,GAHK,IAFR,UAOazB,EAAAA,EAAAA,IAAcQ,GAP3B,gBAOFb,EAPE,EAOFA,KACRe,GAAS,SAAAwB,GAAS,yBACXA,GADW,IAEdZ,MAAO3B,EAAKwC,SAFE,IARR,gDAaVzB,GAAS,SAAAwB,GAAS,yBACXA,GADW,IAEdV,MAAK,MAFS,IAbR,yBAoBVd,GAAS,SAAAwB,GAAS,yBACXA,GADW,IAEdX,SAAS,GAFK,IApBR,4EAAH,qDA0BXf,GACAyB,GAGP,GAAE,CAACzB,IAEJ,IAKQc,EAAmCb,EAAnCa,MAAOC,EAA4Bd,EAA5Bc,QAASC,EAAmBf,EAAnBe,MAAOC,EAAYhB,EAAZgB,QACzBW,EAAWd,EAAMe,KAAI,gBAAGxC,EAAH,EAAGA,GAAIyC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAa1B,EAApC,EAAoCA,KAApC,OAA+C,0BACtE,SAAC,KAAD,CAASJ,MAAO,CAAC+B,KAAMd,GAAWe,GAAE,kBAAa5C,GAAjD,UACI,UAACwB,EAAD,WACKkB,GAAe,gBAAKG,IAAG,0CAAqCH,GAAeI,IAAI,MACzE,gBAAKD,IAAKE,EAAcD,IAAI,GAAGE,MAAM,KAAKC,OAAO,SACxD,wBAAKR,GAAkBzB,QAJ6BhB,IADoBA,EAAzD,IAU3B,OACI,2BACK2B,IAAS,kCACV,SAAC,EAAD,CAAYlB,SAnBC,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACpBsB,EAAgB,CAAEtB,OAAAA,GACrB,IAkBQe,IAAW,SAACwB,EAAA,EAAD,KACZ,SAAC3B,EAAD,UAAWE,EAAM0B,OAAS,GAAKZ,IAC9BX,IAAW,0DAGvB,C","sources":["components/API/apiServices.js","components/FilmSearch/FilmSearch.styled.jsx","components/FilmSearch/FilmSearch.jsx","pages/MoviesPages/Movies.styled.jsx","pages/MoviesPages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '152aa9c1fb200c1c42a40b69b3af0ad5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const getMovies = async () => {\n    const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return data;\n}\n\n\nexport const getFilmInfo = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getFilmCast = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return data;\n};\n\nexport const getFilmReviews = async (id) => {\n    const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getSearchFilm = async (query) => {\n    const data = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data;\n}\n\n\n\n\n","import styled from '@emotion/styled'\n\n\nexport const Form = styled.form`\ntext-align: center;\n    margin-top: 34px;\n    position: relative;\n`\n\nexport const Input = styled.input`\ncolor:white;\nfont-size: 17px;\nfont-weight: 700;\npadding: 14px 30px;\nmargin-left:10px;\ngap: 11.02px;\nfilter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\nbackground: #1A1B2A;\nbox-shadow: -28.9589px 40.5425px 28.9589px rgba(0, 0, 0, 0.25), inset 0px 4.63343px 4.63343px 1.15836px rgba(0, 0, 0, 0.25), inset 0px 0px 11.5836px rgba(101, 101, 101, 0.25), inset 0px 0px 0px 3.47507px rgba(70, 70, 70, 0.25);\n\nborder: 2.31672px;\nborder-radius: 28.9589px;\n`\n\n\nexport const Button = styled.button`\ncolor:white;\nfont-size: 17px;\nfont-weight: 700;\npadding: 14px 30px;\nmargin-left:10px;\ngap: 11.02px;\nfilter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\nbackground: #1A1B2A;\nbox-shadow: -28.9589px 40.5425px 28.9589px rgba(0, 0, 0, 0.25), inset 0px 4.63343px 4.63343px 1.15836px rgba(0, 0, 0, 0.25), inset 0px 0px 11.5836px rgba(101, 101, 101, 0.25), inset 0px 0px 0px 3.47507px rgba(70, 70, 70, 0.25);\n\nborder: 2.31672px solid #258A2F;\nborder-radius: 28.9589px;\n\n`","import { useState } from \"react\";\nimport { Input, Form, Button } from \"./FilmSearch.styled\";\n\n\nconst FilmSearch = ({onSubmit}) => {\n    const [state, setState] = useState({\n        search: ''\n    });\n\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit({ ...state });\n        setState({\n            search: ''\n        })\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Input name=\"search\" value={state.search} onChange={handleChange} placeholder=\"Search Film\" required/>\n                <Button type=\"submit\">Search</Button>\n            </Form>\n           \n    )\n}\n\n\nexport default FilmSearch;\n","import styled from \"@emotion/styled\";\n\n\n\nexport const FilmCard = styled.ul`\n@media screen and (min-width: 552px) {\n    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\n  }\ndisplay: grid;\njustify-content: center;\nlist-style: none;\n`\n\n\nexport const FilmList = styled.li`\nmax-width:300px;\nmargin-right:10px\n`","import { useEffect, useState } from \"react\";\nimport { useSearchParams, useLocation, NavLink } from \"react-router-dom\";\nimport { getSearchFilm } from \"components/API/apiServices\";\nimport Loader from \"components/Loader/Loader\";\nimport FilmSearch from \"components/FilmSearch/FilmSearch\";\nimport { FilmCard, FilmList } from \"./Movies.styled\";\nimport DefaultImage from '../../image/no-image.webp';\n\n\n\nconst Movies = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n        isEmpty: false,\n    });\n\n    const location = useLocation();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search');\n\n    useEffect(() => {\n        const FetchFilm = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    isEmpty: true,\n                }));\n                const { data } = await getSearchFilm(search)\n                setState(prevState => ({\n                    ...prevState,\n                    items: data.results,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n\n                }))\n            }\n            finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }))\n            }\n        }\n        if (search) {\n            FetchFilm();\n        }\n\n    }, [search]);\n\n    const changeSearch = ({ search }) => {\n        setSearchParams({ search })\n    }\n\n\n    const { items, loading, error, isEmpty } = state;\n    const elements = items.map(({ id, original_title, poster_path, name }) => <div key={id}>\n        <NavLink state={{from: location}} to={`/movies/${id}`} key={id}>\n            <FilmList>\n                {poster_path ? (<img src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt=\"\" />)\n                    : (<img src={DefaultImage} alt=\"\" width='90' height='135' />)}\n                <h2>{original_title || name}</h2>\n            </FilmList>\n        </NavLink>\n    </div>)\n\n    return (\n        <div>\n            {error && <p>Error</p>}\n            <FilmSearch onSubmit={changeSearch} />\n            {loading && <Loader/>}\n            <FilmCard>{items.length > 0 && elements}</FilmCard>\n            {isEmpty && <h2>Sorry no results, try again</h2>}\n        </div>)\n    \n};\n\n\nexport default Movies;"],"names":["API_KEY","axios","getMovies","data","getFilmInfo","id","getFilmCast","getFilmReviews","getSearchFilm","query","Form","styled","Input","Button","onSubmit","useState","search","state","setState","event","preventDefault","name","value","onChange","target","placeholder","required","type","FilmCard","FilmList","items","loading","error","isEmpty","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","FetchFilm","prevState","results","elements","map","original_title","poster_path","from","to","src","alt","DefaultImage","width","height","Loader","length"],"sourceRoot":""}
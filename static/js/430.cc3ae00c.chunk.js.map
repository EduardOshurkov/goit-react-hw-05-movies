{"version":3,"file":"static/js/430.cc3ae00c.chunk.js","mappings":"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","sources":["components/API/apiServices.js","components/Loader/Loader.jsx","components/FilmSearch/FilmSearch.styled.jsx","components/FilmSearch/FilmSearch.jsx","pages/MoviesPages/Movies.styled.jsx","pages/MoviesPages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '152aa9c1fb200c1c42a40b69b3af0ad5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const getMovies = async () => {\n    const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return data;\n}\n\n\nexport const getFilmInfo = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getFilmCast = async (id) => {\n    const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return data;\n};\n\nexport const getFilmReviews = async (id) => {\n    const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    return data;\n}\n\nexport const getSearchFilm = async (query) => {\n    const data = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data;\n}\n\n\n\n\n","import { BallTriangle } from 'react-loader-spinner';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\n\n\nexport default function Loader() {\n    return (\n        <LoaderWraper>\n            <BallTriangle color=\"#00BFFF\" height={80} width={80} />\n        </LoaderWraper>\n    )\n}\n\n\nconst LoaderWraper = styled.div`\n display: flex;\n  justify-content: center;\n`","import styled from '@emotion/styled'\n\n\nexport const Form = styled.form`\ntext-align: center;\n`\n\nexport const Input = styled.input`\nwidth: 200px;\njustify-content: center;\nborder: 3px solid #black;\nfont-size: 17px;\nline-height: 1.17;\n`\n\n\nexport const Button = styled.button`\npadding: 4px 16px;\nmargin-left: 10px;\ncolor: white;\nbackground-color: orangered;\nborder-radius: 4px;\ntext-decoration: none;\nfont-weight: 500;\n`","import { useState } from \"react\";\nimport { Input, Form, Button } from \"./FilmSearch.styled\";\n\n\nconst FilmSearch = ({onSubmit}) => {\n    const [state, setState] = useState({\n        search: ''\n    });\n\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit({ ...state });\n        setState({\n            search: ''\n        })\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Input name=\"search\" value={state.search} onChange={handleChange} placeholder=\"Search Film\" required/>\n                <Button type=\"submit\">Search</Button>\n            </Form>\n           \n    )\n}\n\n\nexport default FilmSearch;\n","import styled from \"@emotion/styled\";\n\n\n\nexport const FilmCard = styled.ul`\nmin-width: 280px;\n    flex-wrap: wrap;\n    display: flex;\n    list-style: none;\n    padding: 0;\n`\n\n\nexport const FilmList = styled.li`\nmax-width:300px;\nmargin-right:10px\n`","import { useEffect, useState } from \"react\";\nimport { useSearchParams, useLocation, Link } from \"react-router-dom\";\nimport { getSearchFilm } from \"components/API/apiServices\";\nimport Loader from \"components/Loader/Loader\";\nimport FilmSearch from \"components/FilmSearch/FilmSearch\";\nimport { FilmCard, FilmList } from \"./Movies.styled\";\nimport DefaultImage from '../../image/no-image.webp';\n\n\n\nconst Movies = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n        isEmpty: false,\n    });\n\n    const location = useLocation();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search');\n\n    useEffect(() => {\n        const FetchFilm = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    isEmpty: true,\n                }));\n                const { data } = await getSearchFilm(search)\n                setState(prevState => ({\n                    ...prevState,\n                    items: data.results,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n\n                }))\n            }\n            finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }))\n            }\n        }\n        if (search) {\n            FetchFilm();\n        }\n\n    }, [search]);\n\n    const changeSearch = ({ search }) => {\n        setSearchParams({ search })\n    }\n\n\n    const { items, loading, error, isEmpty } = state;\n    const elements = items.map(({ id, original_title, poster_path, name }) => <div key={id}>\n        <Link state={{from: location}} to={`/movies/${id}`} key={id}>\n            <FilmList>\n                {poster_path ? (<img src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt=\"\" />)\n                    : (<img src={DefaultImage} alt=\"\" width='90' height='135' />)}\n                <h2>{original_title || name}</h2>\n            </FilmList>\n        </Link>\n    </div>)\n\n    return (\n        <div>\n            {error && <p>Error</p>}\n            <FilmSearch onSubmit={changeSearch} />\n            {loading && <Loader/>}\n            <FilmCard>{items.length > 0 && elements}</FilmCard>\n            {isEmpty && <h1>Sorry no results, try again</h1>}\n        </div>)\n    \n};\n\n\nexport default Movies;"],"names":["API_KEY","axios","getMovies","data","getFilmInfo","id","getFilmCast","getFilmReviews","getSearchFilm","query","Loader","LoaderWraper","color","height","width","styled","Form","Input","Button","onSubmit","useState","search","state","setState","event","preventDefault","name","value","onChange","target","placeholder","required","type","FilmCard","FilmList","items","loading","error","isEmpty","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","FetchFilm","prevState","results","elements","map","original_title","poster_path","from","to","src","alt","DefaultImage","length"],"sourceRoot":""}